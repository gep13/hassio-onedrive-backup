@page "/settings"
@using hassio_onedrive_backup.Contracts;
@using onedrive_backup.Models;
@inject AddonOptions AddonOptions
@inject SettingsFields SettingsReader
@inject IJSRuntime JS

<div class="container">
	<div class="fixed-top bg-light p-3">
		<button type="submit" class="btn btn-primary" @onclick="Save">Save Settings</button>
	</div>
	<form>
		<h3>General</h3>
		<div class="mb-3">
			<label for="hassApiTimeoutMinutes" class="form-label" data-bs-toggle="tooltip" data-bs-title="@SettingsReader.Settings.backup_passwd.description">@SettingsReader.Settings.backup_passwd.name</label>
			<input type="number" class="form-control" id="@SettingsReader.Settings.backup_passwd.name" placeholder="Enter timeout value">
		</div>


		<div class="mb-3 form-switch">
			<label class="form-check-label" data-bs-toggle="tooltip" data-bs-title="@SettingsReader.Settings.notify_on_error.description">
				<input type="checkbox" class="form-check-input" role="switch" id="@SettingsReader.Settings.notify_on_error.name" @bind="AddonOptions.NotifyOnError">
				@SettingsReader.Settings.notify_on_error.name
			</label>
		</div>

		<div class="mb-3">
			<label class="form-label" data-bs-toggle="tooltip" data-bs-title="@SettingsReader.Settings.log_level.description">@SettingsReader.Settings.log_level.name</label>
			<div class="form-check form-check-inline">
				<input class="form-check-input" type="radio" name="inlineRadioOptions" id="verbose" value="verbose"
		checked="@(AddonOptions.LogLevelStr == "verbose")" @onchange="LogLevelChanged">
				<label class="form-check-label" for="verbose">Verbose</label>
			</div>
			<div class="form-check form-check-inline">
				<input class="form-check-input" type="radio" name="inlineRadioOptions" id="info" value="info"
		checked="@(AddonOptions.LogLevelStr == "info")" @onchange="LogLevelChanged">
				<label class="form-check-label" for="info">Info</label>
			</div>
			<div class="form-check form-check-inline">
				<input class="form-check-input" type="radio" name="inlineRadioOptions" id="warning" value="warning"
		checked="@(AddonOptions.LogLevelStr == "warning")" @onchange="LogLevelChanged">
				<label class="form-check-label" for="info">Warning</label>
			</div>
			<div class="form-check form-check-inline">
				<input class="form-check-input" type="radio" name="inlineRadioOptions" id="error" value="error"
		checked="@(AddonOptions.LogLevelStr == "error")" @onchange="LogLevelChanged">
				<label class="form-check-label" for="info">Error</label>
			</div>
		</div>

		<h3>Backup</h3>

		<div class="mb-3">
			<label for="@SettingsReader.Settings.local_backup_num_to_keep.name"
				   class="form-label" data-bs-toggle="tooltip" data-bs-title="@SettingsReader.Settings.local_backup_num_to_keep.description">
				@SettingsReader.Settings.local_backup_num_to_keep.name
			</label>
			<input type="number" class="form-control" id="@SettingsReader.Settings.local_backup_num_to_keep.name" placeholder="Enter value (>=0)" @bind="AddonOptions.MaxLocalBackups">
		</div>

		<div class="mb-3">
			<label for="@SettingsReader.Settings.onedrive_backup_num_to_keep.name"
				   class="form-label" data-bs-toggle="tooltip" data-bs-title="@SettingsReader.Settings.onedrive_backup_num_to_keep.description">
				@SettingsReader.Settings.onedrive_backup_num_to_keep.name
			</label>
			<input type="number" class="form-control" id="@SettingsReader.Settings.onedrive_backup_num_to_keep.name" placeholder="Enter value (>=0)" @bind="AddonOptions.MaxOnedriveBackups">
		</div>

		<div class="mb-3">
			<label for="@SettingsReader.Settings.backup_interval_days.name" class="form-label"
				   data-bs-toggle="tooltip" data-bs-title="@SettingsReader.Settings.backup_interval_days.description">@SettingsReader.Settings.backup_interval_days.name</label>
			<input type="number" class="form-control" id="@SettingsReader.Settings.backup_interval_days.name" placeholder="Enter value (>=1)" @bind="AddonOptions.BackupIntervalDays">
		</div>

		<div class="mb-3">
			<label for="@SettingsReader.Settings.generational_days.name" class="form-label"
				   data-bs-toggle="tooltip" data-bs-title="@SettingsReader.Settings.generational_days.description">@SettingsReader.Settings.generational_days.name</label>
			<input type="number" class="form-control" id="@SettingsReader.Settings.generational_days.name" placeholder="Enter value (>=1)" @bind="AddonOptions.GenerationalDays">
		</div>

		<div class="mb-3">
			<label for="@SettingsReader.Settings.generational_weeks.name" class="form-label"
				   data-bs-toggle="tooltip" data-bs-title="@SettingsReader.Settings.generational_weeks.description">@SettingsReader.Settings.generational_weeks.name</label>
			<input type="number" class="form-control" id="@SettingsReader.Settings.generational_weeks.name" placeholder="Enter value (>=1)" @bind="AddonOptions.GenerationalWeeks">
		</div>

		<div class="mb-3">
			<label for="@SettingsReader.Settings.generational_months.name" class="form-label"
				   data-bs-toggle="tooltip" data-bs-title="@SettingsReader.Settings.generational_months.description">@SettingsReader.Settings.generational_months.name</label>
			<input type="number" class="form-control" id="@SettingsReader.Settings.generational_months.name" placeholder="Enter value (>=1)" @bind="AddonOptions.GenerationalMonths">
		</div>

		<div class="mb-3">
			<label for="@SettingsReader.Settings.generational_years.name" class="form-label"
				   data-bs-toggle="tooltip" data-bs-title="@SettingsReader.Settings.generational_years.description">@SettingsReader.Settings.generational_years.name</label>
			<input type="number" class="form-control" id="@SettingsReader.Settings.generational_years.name" placeholder="Enter value (>=1)" @bind="AddonOptions.GenerationalYears">
		</div>

		<div class="mb-3">
			<label for="backupName" class="form-label" data-bs-toggle="tooltip" data-bs-title="@SettingsReader.Settings.backup_name.description">@SettingsReader.Settings.backup_name.name</label>
			<input type="text" class="form-control" id="@SettingsReader.Settings.backup_name.name" placeholder="Enter backup name">
		</div>

		<div class="mb-3">
			<label for="backupName" class="form-label" data-bs-toggle="tooltip" data-bs-title="@SettingsReader.Settings.backup_instance_name.description">@SettingsReader.Settings.backup_instance_name.name</label>
			<input type="text" class="form-control" id="@SettingsReader.Settings.backup_instance_name.name" placeholder="Enter backup instance name">
		</div>

		<div class="mb-3">
			<label for="backupName" class="form-label" data-bs-toggle="tooltip" data-bs-title="@SettingsReader.Settings.backup_allowed_hours.description">@SettingsReader.Settings.backup_allowed_hours.name</label>
			<input type="text" class="form-control" id="@SettingsReader.Settings.backup_allowed_hours.name" placeholder="Enter allowed hours">
		</div>

		<div class="mb-3">
			<label for="backupPasswd" class="form-label" data-bs-toggle="tooltip" data-bs-title="@SettingsReader.Settings.backup_passwd.description">@SettingsReader.Settings.backup_passwd.name</label>
			<input type="password" class="form-control" id="@SettingsReader.Settings.backup_passwd.name" placeholder="Enter password">
		</div>

		<div class="mb-3">
			<label class="form-label" data-bs-toggle="tooltip"
				   data-bs-title="@SettingsReader.Settings.excluded_addons.description">@SettingsReader.Settings.excluded_addons.name</label>
			@for (var idx = 0; idx < AddonOptions.ExcludedAddons.Count; idx++)
			{
				var tmpIdx = idx;
				<div class="mb-3">
					<input type="text" class="form-control" placeholder="Enter Addon Name" value="@AddonOptions.ExcludedAddons[idx]"
					   @onchange="e => UpdateExcludedAddons(e, tmpIdx)" />
				</div>
			}

		</div>

		<div class="mb-3 form-switch">
			<label class="form-check-label" data-bs-toggle="tooltip" data-bs-title="@SettingsReader.Settings.monitor_all_local_backups.description">
				<input type="checkbox" class="form-check-input" role="switch" id="@SettingsReader.Settings.monitor_all_local_backups.name" @bind="AddonOptions.MonitorAllLocalBackups" />
				@SettingsReader.Settings.monitor_all_local_backups.name
			</label>
		</div>

		<div class="mb-3 form-switch">
			<label class="form-check-label" data-bs-toggle="tooltip" data-bs-title="@SettingsReader.Settings.ignore_upgrade_backups.description">
				<input type="checkbox" class="form-check-input" role="switch" id="@SettingsReader.Settings.ignore_upgrade_backups.name" @bind="AddonOptions.IgnoreUpgradeBackups" />
				@SettingsReader.Settings.ignore_upgrade_backups.name
			</label>
		</div>

		<div class="mb-3 form-switch">
			<label class="form-check-label" data-bs-toggle="tooltip" data-bs-title="@SettingsReader.Settings.exclude_media_folder.description">
				<input type="checkbox" class="form-check-input" role="switch" id="@SettingsReader.Settings.exclude_media_folder.name" @bind="AddonOptions.ExcludeMediaFolder" />
				@SettingsReader.Settings.exclude_media_folder.name
			</label>
		</div>

		<div class="mb-3 form-switch">
			<label class="form-check-label" data-bs-toggle="tooltip" data-bs-title="@SettingsReader.Settings.exclude_ssl_folder.description">
				<input type="checkbox" class="form-check-input" role="switch" id="@SettingsReader.Settings.exclude_ssl_folder.name" @bind="AddonOptions.ExcludeSSLFolder" />
				@SettingsReader.Settings.exclude_ssl_folder.name
			</label>
		</div>

		<div class="mb-3 form-switch">
			<label class="form-check-label" data-bs-toggle="tooltip" data-bs-title="@SettingsReader.Settings.exclude_share_folder.description">
				<input type="checkbox" class="form-check-input" role="switch" id="@SettingsReader.Settings.exclude_share_folder.name" @bind="AddonOptions.ExcludeShareFolder" />
				@SettingsReader.Settings.exclude_share_folder.name
			</label>
		</div>

		<div class="mb-3 form-switch">
			<label class="form-check-label" data-bs-toggle="tooltip" data-bs-title="@SettingsReader.Settings.exclude_local_addons_folder.description">
				<input type="checkbox" class="form-check-input" role="switch" id="@SettingsReader.Settings.exclude_local_addons_folder.name" @bind="AddonOptions.ExcludeLocalAddonsFolder" />
				@SettingsReader.Settings.exclude_local_addons_folder.name
			</label>
		</div>

		<h3>File Sync</h3>


		<div class="mb-3">
			<label class="form-label" data-bs-toggle="tooltip"
				   data-bs-title="@SettingsReader.Settings.sync_paths.description">@SettingsReader.Settings.sync_paths.name</label>
			@for (var idx = 0; idx < AddonOptions.SyncPaths.Count; idx++)
			{
				var tmpIdx = idx;
				<div class="mb-3">
					<input type="text" class="form-control" placeholder="Enter path" value="@AddonOptions.SyncPaths[idx]"
					   @onchange="e => UpdateSyncPath(e, tmpIdx)" />
				</div>
			}

		</div>


		<div class="mb-3 form-switch">
			<label class="form-check-label" data-bs-toggle="tooltip" data-bs-title="@SettingsReader.Settings.file_sync_remove_deleted.description">
				<input type="checkbox" class="form-check-input" role="switch" id="@SettingsReader.Settings.file_sync_remove_deleted.name" @bind="AddonOptions.FileSyncRemoveDeleted" />
				@SettingsReader.Settings.file_sync_remove_deleted.name
			</label>
		</div>

		@*<button type="submit" class="btn btn-primary" @onclick="Save">Save Settings</button>*@
	</form>
</div>

@code {

	protected override async Task OnAfterRenderAsync(bool firstRender)
	{
		if (firstRender)
		{
			await JS.InvokeVoidAsync("addTooltips");
		}

		if (string.IsNullOrWhiteSpace(AddonOptions.SyncPaths.Last()) == false)
		{
			AddonOptions.SyncPaths.Add(string.Empty);
			TriggerStateChanged();
		}

		if (string.IsNullOrWhiteSpace(AddonOptions.ExcludedAddons.Last()) == false)
		{
			AddonOptions.ExcludedAddons.Add(string.Empty);
			TriggerStateChanged();
		}

	}

	private void Save()
	{

	}

	private void UpdateSyncPath(ChangeEventArgs e, int index)
	{
		var val = e.Value.ToString();
		AddonOptions.SyncPaths[index] = val;
		// if (string.IsNullOrWhiteSpace(val) == false)
		// {
		//     AddonOptions.SyncPaths.Add(string.Empty);
		// }
	}

	private void UpdateExcludedAddons(ChangeEventArgs e, int index)
	{
		AddonOptions.ExcludedAddons[index] = e.Value.ToString();
	}

	private void LogLevelChanged(ChangeEventArgs e)
	{
		AddonOptions.LogLevelStr = e.Value.ToString();
	}

	private async void TriggerStateChanged()
	{
		await InvokeAsync(() =>
		{
			StateHasChanged();
		});
	}

}